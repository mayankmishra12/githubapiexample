{"ast":null,"code":"import _classCallCheck from \"/home/gowda/Desktop/mayank/foodbay/foodBayUi/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/gowda/Desktop/mayank/foodbay/foodBayUi/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/gowda/Desktop/mayank/foodbay/foodBayUi/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/gowda/Desktop/mayank/foodbay/foodBayUi/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/gowda/Desktop/mayank/foodbay/foodBayUi/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/gowda/Desktop/mayank/foodbay/foodBayUi/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/gowda/Desktop/mayank/foodbay/foodBayUi/src/component/search.js\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Input from '@material-ui/core/Input';\nimport FormControl from '@material-ui/core/FormControl';\n\nvar Search =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Search, _Component);\n\n  function Search() {\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Search).call(this));\n    _this.state = {\n      users: []\n    };\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"handleInputChange\",\n    value: function handleInputChange(event) {\n      alert(event.target.user.value);\n      event.preventDefault();\n      var userArray = this.state.users;\n      var user = event.target.user.value;\n      userArray.push(event.target.user.value);\n      localStorage.setItem(\"users\", JSON.stringify(userArray));\n      console.log(user);\n      return this.SearchInGithub(user);\n    }\n  }, {\n    key: \"SearchInGithub\",\n    value: function SearchInGithub(user) {\n      var _this2 = this;\n\n      console.log(user);\n      return fetch(\"https://api.github.com/search/users?q=\".concat(user), {\n        method: 'get'\n      }).then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        return _this2.setState({\n          users: res.items\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var user = localStorage.getItem('users');\n      var userArray = user ? JSON.parse(user) : [];\n      this.setState({\n        users: userArray\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Input, {\n        name: \"user\",\n        placeholder: \"Search for...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"small\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \" Search\")), React.createElement(ListItems, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Search;\n}(Component);\n\nexport default Search;","map":{"version":3,"sources":["/home/gowda/Desktop/mayank/foodbay/foodBayUi/src/component/search.js"],"names":["React","Component","Button","Input","FormControl","Search","state","users","handleInputChange","bind","event","alert","target","user","value","preventDefault","userArray","push","localStorage","setItem","JSON","stringify","console","log","SearchInGithub","fetch","method","then","res","json","setState","items","getItem","parse"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;;IACMC,M;;;;;AACL,oBAAa;AAAA;;AAAA;;AACX;AACA,UAAKC,KAAL,GAAa;AAACC,MAAAA,KAAK,EAAC;AAAP,KAAb;AACA,UAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBC,IAAvB,uDAAzB;AAHW;AAIZ;;;;sCAEmBC,K,EAAO;AAC1BC,MAAAA,KAAK,CAACD,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,KAAnB,CAAL;AACAJ,MAAAA,KAAK,CAACK,cAAN;AACD,UAAIC,SAAS,GAAG,KAAKV,KAAL,CAAWC,KAA3B;AACA,UAAIM,IAAI,GAAGH,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,KAA7B;AACAE,MAAAA,SAAS,CAACC,IAAV,CAAeP,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,KAAjC;AACDI,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeL,SAAf,CAA7B;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACA,aAAO,KAAKW,cAAL,CAAoBX,IAApB,CAAP;AAEE;;;mCAEcA,I,EAAK;AAAA;;AAElBS,MAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACF,aAAOY,KAAK,iDAA0CZ,IAA1C,GAAkD;AAC3Da,QAAAA,MAAM,EAAE;AADmD,OAAlD,CAAL,CAELC,IAFK,CAEA,UAACC,GAAD;AAAA,eAAOA,GAAG,CAACC,IAAJ,EAAP;AAAA,OAFA,EAGPF,IAHO,CAGF,UAACC,GAAD;AAAA,eAAO,MAAI,CAACE,QAAL,CAAc;AAAEvB,UAAAA,KAAK,EAAEqB,GAAG,CAACG;AAAb,SAAd,CAAP;AAAA,OAHE,CAAP;AAIA;;;wCAGmB;AAClB,UAAIlB,IAAI,GAAIK,YAAY,CAACc,OAAb,CAAqB,OAArB,CAAZ;AACA,UAAIhB,SAAS,GAAGH,IAAI,GAAEO,IAAI,CAACa,KAAL,CAAWpB,IAAX,CAAF,GAAqB,EAAzC;AACA,WAAKiB,QAAL,CAAc;AAAEvB,QAAAA,KAAK,EAAES;AAAT,OAAd;AAED;;;6BACS;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAM,QAAA,QAAQ,EAAG,KAAKR,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACC,QAAA,IAAI,EAAG,MADR;AAEE,QAAA,WAAW,EAAC,eAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAKE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,SAAlC;AAA4C,QAAA,IAAI,EAAE,OAAlD;AAA0D,QAAA,IAAI,EAAE,QAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALF,CADA,EAQA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARA,CADF;AAYD;;;;EAhDmBP,S;;AAmDrB,eAAeI,MAAf","sourcesContent":["import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button';\nimport Input from '@material-ui/core/Input';\nimport FormControl from '@material-ui/core/FormControl';\nclass Search extends Component {\n constructor(){\n   super();\n   this.state = {users:[]}\n   this.handleInputChange = this.handleInputChange.bind(this);\n }\n \n handleInputChange  (event) {\n  alert(event.target.user.value);\n  event.preventDefault();\n let userArray = this.state.users;\n let user = event.target.user.value;\n userArray.push(event.target.user.value)\nlocalStorage.setItem(\"users\",JSON.stringify(userArray));\nconsole.log(user);\nreturn this.SearchInGithub(user);\n \n }\n\n SearchInGithub(user){\n   \n   console.log(user);\n return fetch(`https://api.github.com/search/users?q=${user}`, {\n    method: 'get',\n}).then((res)=>res.json() )\n.then((res)=>this.setState({ users :res.items }))\n}\n \n \ncomponentDidMount (){\n  let user =  localStorage.getItem('users')\n  let userArray = user? JSON.parse(user) : [];\n  this.setState({ users :userArray })\n \n} \n render() {\n   return (\n     <div>\n     <form onSubmit= {this.handleInputChange} >\n       <Input \n        name = \"user\"\n         placeholder=\"Search for...\"\n       /> \n       <Button variant=\"contained\" color=\"primary\" size =\"small\" type =\"submit\"> Search</Button>\n     </form>\n     <ListItems />\n     </div>\n   )\n }\n}\n\nexport default Search\n"]},"metadata":{},"sourceType":"module"}