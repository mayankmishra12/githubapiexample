{"ast":null,"code":"import _classCallCheck from \"/home/gowda/mayank_project/githubapiexample/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/gowda/mayank_project/githubapiexample/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/gowda/mayank_project/githubapiexample/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/gowda/mayank_project/githubapiexample/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/gowda/mayank_project/githubapiexample/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/gowda/mayank_project/githubapiexample/src/component/repo.js\";\nimport React, { Component } from \"react\"; // import  '../const';\n// import { host } from \"../const\";\n\nimport constant from '../constatnt';\n\nvar RepoInfo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RepoInfo, _Component);\n\n  function RepoInfo(props) {\n    var _this;\n\n    _classCallCheck(this, RepoInfo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RepoInfo).call(this, props));\n    _this.state = {\n      repoinfo: {}\n    }; // this.handleclick = this.handleclick.bind(this);\n\n    return _this;\n  }\n\n  _createClass(RepoInfo, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      var user = this.props.match.params.user;\n      var repo = this.props.match.params.repo;\n      fetch(\"https://api.github.com/repos/\".concat(user, \"/\").concat(repo), {\n        method: 'get'\n      }).then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        return _this2.setState({\n          repoinfo: res\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.state.repoinfo); // if (this.state.repoinfo.name != {}){\n      //   return <div>\n      //        <h1>{this.state.repoinfo.name}</h1>\n      //        <div>this repo is created on \n      //        <span>{this.state.repoinfo.created_at}</span> \n      //        and updated at\n      //        <span>          {this.state.repoinfo.updated_at} </span></div>\n      //        <h1>description</h1>\n      //        <p>{this.state.repoinfo.description}</p>\n      //        <p>download the project from {this.state.repoinfo.downloads_url}</p>\n      //   </div>\n      // }\n      //   return <p>error finding the repo</p>\n\n      retrun(React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(AppBar, {\n        position: \"static\",\n        className: classes.bar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Toolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        className: classes.menuButton,\n        color: \"inherit\",\n        \"aria-label\": \"Menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        variant: \"h6\",\n        color: \"inherit\",\n        className: classes.grow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"News\"), React.createElement(Button, {\n        color: \"inherit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Home\")))));\n    }\n  }]);\n\n  return RepoInfo;\n}(Component);\n\nexport default RepoInfo;","map":{"version":3,"sources":["/home/gowda/mayank_project/githubapiexample/src/component/repo.js"],"names":["React","Component","constant","RepoInfo","props","state","repoinfo","user","match","params","repo","fetch","method","then","res","json","setState","console","log","retrun","classes","root","bar","menuButton","grow"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;AACA;;AACA,OAAOC,QAAP,MAAqB,cAArB;;IACMC,Q;;;;;AACJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAb,CAFiB,CAGjB;;AAHiB;AAIlB;;;;yCACoB;AAAA;;AACpB,UAAIC,IAAI,GAAG,KAAKH,KAAL,CAAWI,KAAX,CAAiBC,MAAjB,CAAwBF,IAAnC;AACA,UAAIG,IAAI,GAAG,KAAKN,KAAL,CAAWI,KAAX,CAAiBC,MAAjB,CAAwBC,IAAnC;AACAC,MAAAA,KAAK,wCAAiCJ,IAAjC,cAAyCG,IAAzC,GAAiD;AAC7CE,QAAAA,MAAM,EAAE;AADqC,OAAjD,CAAL,CAEQC,IAFR,CAEa,UAACC,GAAD;AAAA,eAAOA,GAAG,CAACC,IAAJ,EAAP;AAAA,OAFb,EAGMF,IAHN,CAGY,UAAAC,GAAG;AAAA,eAAI,MAAI,CAACE,QAAL,CAAc;AAACV,UAAAA,QAAQ,EAACQ;AAAV,SAAd,CAAJ;AAAA,OAHf;AAIM;;;6BAEE;AACPG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWC,QAAvB,EADO,CAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAa,MAAAA,MAAM,CACJ;AAAK,QAAA,SAAS,EAAEC,OAAO,CAACC,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,MAAD;AAAQ,QAAA,QAAQ,EAAC,QAAjB;AAA0B,QAAA,SAAS,EAAED,OAAO,CAACE,GAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAEF,OAAO,CAACG,UAA/B;AAA2C,QAAA,KAAK,EAAC,SAAjD;AAA2D,sBAAW,MAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAIE,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,KAAK,EAAC,SAA/B;AAAyC,QAAA,SAAS,EAAEH,OAAO,CAACI,IAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,EAOE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,CADF,CADA,CADI,CAAN;AAeC;;;;EA7CoBvB,S;;AAgDvB,eAAeE,QAAf","sourcesContent":["import React, { Component } from \"react\";\n// import  '../const';\n// import { host } from \"../const\";\nimport constant from '../constatnt'\nclass RepoInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { repoinfo: {} };\n    // this.handleclick = this.handleclick.bind(this);\n  }\n  componentWillMount() {\n   let user = this.props.match.params.user;\n   let repo = this.props.match.params.repo;\n   fetch(`https://api.github.com/repos/${user}/${repo}`, {\n            method: 'get',\n        }).then((res)=>res.json() )\n        .then((res => this.setState({repoinfo:res})))\n        }\n  \n  render() {\n    console.log(this.state.repoinfo)\n  // if (this.state.repoinfo.name != {}){\n  //   return <div>\n  //        <h1>{this.state.repoinfo.name}</h1>\n  //        <div>this repo is created on \n  //        <span>{this.state.repoinfo.created_at}</span> \n  //        and updated at\n  //        <span>          {this.state.repoinfo.updated_at} </span></div>\n  //        <h1>description</h1>\n  //        <p>{this.state.repoinfo.description}</p>\n  //        <p>download the project from {this.state.repoinfo.downloads_url}</p>\n  //   </div>\n  // }\n  //   return <p>error finding the repo</p>\n  retrun(\n    <div className={classes.root}>\n    <AppBar position=\"static\" className={classes.bar}>\n      <Toolbar>\n        <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\n         \n        </IconButton>\n        <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n          News\n        </Typography>\n        <Button color=\"inherit\">Home</Button>\n      </Toolbar>\n    </AppBar>\n    </div>\n  )\n  }\n}\n\nexport default RepoInfo;"]},"metadata":{},"sourceType":"module"}